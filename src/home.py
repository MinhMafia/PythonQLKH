from PIL import Image
from pathlib import Path

import customtkinter as ctk
import tkinter.ttk as ttk

import component as comp
import KhachHang, NhanVien, TaiKhoan
# from verification import load_verification_interface
# from verification_new import load_verification_interface

ctk.set_appearance_mode("dark")  # Ch·∫ø ƒë·ªô t·ªëi
ctk.set_default_color_theme("blue")  # Ch·ªß ƒë·ªÅ m√†u xanh

# ƒê∆∞·ªùng d·∫´n th∆∞ m·ª•c hi·ªán t·∫°i
currentDir = Path(__file__).parent


def homeRun(root):
    root.title("Trang ch·ªß")
    for widget in root.winfo_children():
        widget.destroy()  # X√≥a giao di·ªán c≈© ƒë·ªÉ chuy·ªÉn sang home

    comp.CanGiuaCuaSo(root, 1000, 650)

    # Chia th√†nh 2 Frame
    frame_left = ctk.CTkFrame(root, width=250, height=650, corner_radius=0)
    frame_left.pack(side="left", fill="y")

    frame_right = ctk.CTkFrame(root, width=750, height=650)
    frame_right.pack(side="right", fill="both", expand=True)

    def Home():
        # T·∫£i ·∫£nh t·ª´ file
        global home_image
        image_path = currentDir / "img" / "home_image.png"
        home_image = ctk.CTkImage(light_image=Image.open(image_path), size=(750, 650))

        # T·∫°o label ch·ª©a ·∫£nh
        label = ctk.CTkLabel(frame_right, image=home_image, text="")
        label.pack(expand=True)

    def Verify():
        label = ctk.CTkLabel(frame_right, text="X√°c Minh", font=("Arial", 50))
        label.pack(expand=True)

    # H√†m chuy·ªÉn trang
    def show_frame(page):
        for widget in frame_right.winfo_children():
            widget.destroy()  # X√≥a n·ªôi dung c≈©

        try:
            match page:
                case "Home":
                    Home()
                case "Verify":
                    # Verify()
                    # load_verification_interface(frame_right)
                    from verification_new import SignatureVerificationApp
                    SignatureVerificationApp(frame_right)
                case "Customer":
                    KhachHang.Customer(frame_right)
                case "Staff":
                    NhanVien.Staff(frame_right)
                case "Account":
                    TaiKhoan.Account(frame_right)
                case _:
                    raise ValueError("Trang kh√¥ng t·ªìn t·∫°i")
        except Exception as e:
            label = ctk.CTkLabel(frame_right, text=f"‚ùå L·ªói: {e}", font=("Arial", 20), text_color="red")
            label.pack(expand=True)

    # H√†m ƒëƒÉng xu·∫•t
    def logout():
        for widget in root.winfo_children():
            widget.destroy()
        
        import login
        login.root = root  # Truy·ªÅn root v√†o module login
        login.main()  # Hi·ªán l·∫°i c·ª≠a s·ªï ƒëƒÉng nh·∫≠p

    # Chia frame_left thanh 2
    frame_left_account = ctk.CTkFrame(frame_left, width=250, height=100)
    frame_left_account.pack(fill="x", pady=10)

    frame_left_menu = ctk.CTkFrame(frame_left, width=250, height=550)
    frame_left_menu.pack(fill="both", expand=True)

    # Mo ta user
    avatar_path = currentDir / "img" / "avatar.jpg"
    if avatar_path.exists():
        avatar_img = ctk.CTkImage(light_image=Image.open(avatar_path).resize((50, 50)))
    else:
        avatar_img = None  # Ho·∫∑c s·ª≠ d·ª•ng ·∫£nh m·∫∑c ƒë·ªãnh

    # label ch·ª©a ·∫£nh
    avatar_label = ctk.CTkLabel(frame_left_account, image=avatar_img, text="")
    avatar_label.pack(side="left", pady=10, padx=10)

    frame_text = ctk.CTkFrame(frame_left_account, fg_color="transparent")
    frame_text.pack(side="left", padx=5)

    username_label = ctk.CTkLabel(frame_text, text="Username", font=("Arial", 12, "bold"))
    username_label.pack(anchor="w")

    role_label = ctk.CTkLabel(frame_text, text="Role_user", font=("Arial", 12, "bold"))
    role_label.pack(anchor="w")

    # Th√™m n√∫t v√†o khung tr√°i
    btnHome = ctk.CTkButton(frame_left_menu, text="üè† Trang ch·ªß", command=lambda: show_frame("Home"))
    btnHome.pack(pady=10, padx=20)

    btnVerify = ctk.CTkButton(frame_left_menu, text="X√°c Minh", command=lambda: show_frame("Verify"))
    btnVerify.pack(pady=10, padx=20)

    btnCustomer = ctk.CTkButton(frame_left_menu, text="üë§ Kh√°ch h√†ng", command=lambda: show_frame("Customer"))
    btnCustomer.pack(pady=10, padx=20)

    btnStaff = ctk.CTkButton(frame_left_menu, text="Nh√¢n vi√™n", command=lambda: show_frame("Staff"))
    btnStaff.pack(pady=10, padx=20)

    btnAccount = ctk.CTkButton(frame_left_menu, text="T√†i kho·∫£n", command=lambda: show_frame("Account"))
    btnAccount.pack(pady=10, padx=20)



    """"ƒêƒÉng xu·∫•t"""
    btnLogout = ctk.CTkButton(frame_left_menu, text="ƒêƒÉng xu·∫•t", command=logout)
    btnLogout.pack(side="bottom", pady=10, padx=20)

    show_frame("Home")

    root.update()  # C·∫≠p nh·∫≠t giao di·ªán sau khi thay ƒë·ªïi c√°c frame
