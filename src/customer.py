import customtkinter as ctk
import tkinter.ttk as ttk

from BUS.KhachHangBUS import KhachHangBUS
import component as comp

def load_khachHang():
    khachHangBUS = KhachHangBUS()  # T·∫°o ƒë·ªëi t∆∞·ª£ng
    return khachHangBUS.get_khach_hang_all()  # G·ªçi ph∆∞∆°ng th·ª©c qua ƒë·ªëi t∆∞·ª£ng


def Customer(frame_right):

    customers = load_khachHang()


    # Ph·∫ßn def
    # def cho ph·∫ßn search khi vi·∫øt
    def searchCustomerEntry(event=None):
        searchValue = search.get().strip().lower()

        for row in table.get_children():
            table.delete(row)

        for customer in data:
            if searchValue in str(customer).lower():
                table.insert("", "end", values=customer)

    # def cho ph·∫ßn search khi nh·∫•n button
    def searchCustomerBtn():
        searchValue = search.get().strip().lower()

        for row in table.get_children():
            table.delete(row)

        for customer in data:
            if searchValue in str(customer).lower():
                table.insert("", "end", values=customer)

        search.delete(0, "end")

    def search_reload():
        search.delete(0, "end")

        for row in table.get_children():
            table.delete(row)

        data = database.fetch_customers()
        for row in data:
            table.insert("", "end", values=row)

    def window_add_customer():
        add_window = ctk.CTkToplevel(frame_right)
        # add_window.geometry("400x500")
        add_window.attributes("-topmost", True)
        comp.CanGiuaCuaSo(add_window, 400, 500)

        ctk.CTkLabel(add_window, text="Th√™m kh√°ch h√†ng",
                     font=("Arial", 24), text_color="#00FA9A").pack(pady=8)

        ctk.CTkLabel(add_window, text="M√£ CƒÉn c∆∞·ªõc c√¥ng d√¢n:",
                     font=("Arial", 14)).pack(pady=5)
        entry_cccd = ctk.CTkEntry(add_window, width=300)
        entry_cccd.pack(pady=5)

        ctk.CTkLabel(add_window, text="H·ªç v√† T√™n:",
                     font=("Arial", 14)).pack(pady=5)
        entry_name = ctk.CTkEntry(add_window, width=300)
        entry_name.pack(pady=5)

        ctk.CTkLabel(add_window, text="SƒêT:", font=("Arial", 14)).pack(pady=5)
        entry_phone = ctk.CTkEntry(add_window, width=300)
        entry_phone.pack(pady=5)

        ctk.CTkLabel(add_window, text="Email:",
                     font=("Arial", 14)).pack(pady=5)
        entry_email = ctk.CTkEntry(add_window, width=300)
        entry_email.pack(pady=5)

        ctk.CTkLabel(add_window, text="ƒê·ªãa ch·ªâ:",
                     font=("Arial", 14)).pack(pady=5)
        entry_address = ctk.CTkEntry(add_window, width=300)
        entry_address.pack(pady=5)

        frame_btn = ctk.CTkFrame(add_window, fg_color="transparent")
        frame_btn.pack(pady=15)

        btn_cancel = ctk.CTkButton(
            frame_btn, text="H·ªßy b·ªè", fg_color="gray", command=add_window.destroy)
        btn_cancel.pack(side="left", padx=10)

        def confirm_action():
            print("Da them khach hang")
            add_window.destroy()

        btn_confirm = ctk.CTkButton(
            frame_btn, text="X√°c nh·∫≠n", fg_color="green", command=confirm_action)
        btn_confirm.pack(side="right", padx=10)

        add_window.grab_set()

    def window_edit_customer():
        selected_item = table.selection()
        if not selected_item:
            return
        add_window = ctk.CTkToplevel(frame_right)
        # add_window.geometry("400x500")
        add_window.attributes("-topmost", True)
        comp.CanGiuaCuaSo(add_window, 400, 500)

        ctk.CTkLabel(add_window, text="S·ª≠a th√¥ng tin",
                     font=("Arial", 24), text_color="#00FA9A").pack(pady=8)

        ctk.CTkLabel(add_window, text="M√£ CƒÉn c∆∞·ªõc c√¥ng d√¢n:",
                     font=("Arial", 14)).pack(pady=5)
        entry_cccd = ctk.CTkEntry(add_window, width=300, state="disabled")
        entry_cccd.pack(pady=5)

        ctk.CTkLabel(add_window, text="H·ªç v√† T√™n:",
                     font=("Arial", 14)).pack(pady=5)
        entry_name = ctk.CTkEntry(add_window, width=300)
        entry_name.pack(pady=5)

        ctk.CTkLabel(add_window, text="SƒêT:", font=("Arial", 14)).pack(pady=5)
        entry_phone = ctk.CTkEntry(add_window, width=300)
        entry_phone.pack(pady=5)

        ctk.CTkLabel(add_window, text="Email:",
                     font=("Arial", 14)).pack(pady=5)
        entry_email = ctk.CTkEntry(add_window, width=300)
        entry_email.pack(pady=5)

        ctk.CTkLabel(add_window, text="ƒê·ªãa ch·ªâ:",
                     font=("Arial", 14)).pack(pady=5)
        entry_address = ctk.CTkEntry(add_window, width=300)
        entry_address.pack(pady=5)

        frame_btn = ctk.CTkFrame(add_window, fg_color="transparent")
        frame_btn.pack(pady=15)

        btn_cancel = ctk.CTkButton(
            frame_btn, text="H·ªßy b·ªè", fg_color="gray", command=add_window.destroy)
        btn_cancel.pack(side="left", padx=10)

        def confirm_action():
            print("Da them khach hang")
            add_window.destroy()

        btn_confirm = ctk.CTkButton(
            frame_btn, text="X√°c nh·∫≠n", fg_color="green", command=confirm_action)
        btn_confirm.pack(side="right", padx=10)

        add_window.grab_set()

    def window_detail_customer():
        selected_item = table.selection()
        if not selected_item:
            return
        add_window = ctk.CTkToplevel(frame_right)
        # add_window.geometry("400x500")
        add_window.attributes("-topmost", True)
        comp.CanGiuaCuaSo(add_window, 400, 500)

        ctk.CTkLabel(add_window, text="Chi ti·∫øt kh√°ch h√†ng",
                     font=("Arial", 24), text_color="#00FA9A").pack(pady=8)

        ctk.CTkLabel(add_window, text="M√£ CƒÉn c∆∞·ªõc c√¥ng d√¢n:",
                     font=("Arial", 14)).pack(pady=5)
        entry_cccd = ctk.CTkEntry(add_window, width=300, state="disabled")
        entry_cccd.pack(pady=5)

        ctk.CTkLabel(add_window, text="H·ªç v√† T√™n:",
                     font=("Arial", 14)).pack(pady=5)
        entry_name = ctk.CTkEntry(add_window, width=300, state="disabled")
        entry_name.pack(pady=5)

        ctk.CTkLabel(add_window, text="SƒêT:", font=("Arial", 14)).pack(pady=5)
        entry_phone = ctk.CTkEntry(add_window, width=300, state="disabled")
        entry_phone.pack(pady=5)

        ctk.CTkLabel(add_window, text="Email:",
                     font=("Arial", 14)).pack(pady=5)
        entry_email = ctk.CTkEntry(add_window, width=300, state="disabled")
        entry_email.pack(pady=5)

        ctk.CTkLabel(add_window, text="ƒê·ªãa ch·ªâ:",
                     font=("Arial", 14)).pack(pady=5)
        entry_address = ctk.CTkEntry(add_window, width=300, state="disabled")
        entry_address.pack(pady=5)

        frame_btn = ctk.CTkFrame(add_window, fg_color="transparent")
        frame_btn.pack(pady=15)

        btn_cancel = ctk.CTkButton(
            frame_btn, text="H·ªßy b·ªè", fg_color="gray", command=add_window.destroy)
        btn_cancel.pack(side="left", padx=10)

        def confirm_action():
            print("Da them khach hang")
            add_window.destroy()

        btn_confirm = ctk.CTkButton(
            frame_btn, text="X√°c nh·∫≠n", fg_color="green", command=confirm_action)
        btn_confirm.pack(side="right", padx=10)

        add_window.grab_set()

    def on_select(event):
        selected = table.selection()  # L·∫•y danh s√°ch c√°c d√≤ng ƒë∆∞·ª£c ch·ªçn
        if selected:
            btnDetail.configure(state="normal")  # B·∫≠t n√∫t n·∫øu c√≥ d√≤ng ƒë∆∞·ª£c ch·ªçn
        else:
            btnDetail.configure(state="disabled")  # V√¥ hi·ªáu h√≥a n·∫øu kh√¥ng c√≥ d√≤ng n√†o ƒë∆∞·ª£c ch·ªçn

    #
    frame_right.master.title("Qu·∫£n l√Ω kh√°ch h√†ng")

    # Chia frame_right th√†nh head, body
    frame_head_customer = ctk.CTkFrame(
        frame_right, width=750, height=100, fg_color="#C8A280")
    frame_head_customer.pack(fill="x")

    frame_body_customer = ctk.CTkFrame(
        frame_right, width=750, height=550, fg_color="#A67B5B")
    frame_body_customer.pack(fill="both", expand=True)

    # ph·∫ßn search
    frame_search = ctk.CTkFrame(
        frame_head_customer, fg_color="transparent")
    frame_search.pack(side="left", padx=10, pady=15)

    search = ctk.CTkEntry(frame_search,
                          placeholder_text="Nh·∫≠p n·ªôi dung t√¨m ki·∫øm", width=180)
    search.pack(side="left", padx=5)
    search.bind("<KeyRelease>", searchCustomerEntry)

    searchBtn = ctk.CTkButton(
        frame_search, text="üîç T√¨m ki·∫øm", width=85, command=searchCustomerBtn)
    searchBtn.pack(side="left", padx=5)

    searchReload = ctk.CTkButton(frame_search,text="‚ü≥",width=5, height=5,command= search_reload)
    searchReload.pack(side="right",padx=5)

    # Frame ch·ª©a c√°c n√∫t
    frame_buttons = ctk.CTkFrame(
        frame_head_customer, fg_color="transparent")
    frame_buttons.pack(side="right", padx=10, pady=10)

    btnThem = ctk.CTkButton(frame_buttons,
                            text="‚ûï Th√™m", width=80, height=25, command=window_add_customer)
    btnThem.pack(side="left", padx=10, pady=10)
    btnSua = ctk.CTkButton(frame_buttons,
                           text="‚úè S·ª≠a", width=80, height=25, command=window_edit_customer)
    btnSua.pack(side="left", padx=10, pady=10)

    btnXoa = ctk.CTkButton(frame_buttons,
                           text="‚ùå X√≥a", width=80, height=25)
    btnXoa.pack(side="left", padx=10, pady=10)

    btnDetail = ctk.CTkButton(
        frame_buttons, text="üìÑ Chi ti·∫øt", width=80, height=25, command=window_detail_customer)
    btnDetail.pack(side="left", padx=10, pady=10)

    # ---------------------- B·∫¢NG DANH S√ÅCH KH√ÅCH H√ÄNG --------------
    columns = ("MKH", "H·ªç v√† T√™n", "SƒêT", "Email")

    style = ttk.Style()
    # K√≠ch c·ª° ch·ªØ c·ªßa n·ªôi dung b·∫£ng
    style.configure("Treeview", font=("Arial", 14))
    style.configure("Treeview.Heading", font=(
        "Arial", 16, "bold"))  # K√≠ch c·ª° ch·ªØ c·ªßa ti√™u ƒë·ªÅ
    # T·∫°o Treeview (B·∫£ng)
    table = ttk.Treeview(frame_body_customer,
                         columns=columns, show="headings", height=20)

    # ƒê·ªãnh nghƒ©a ti√™u ƒë·ªÅ c·ªôt
    table.heading("MKH", text="MKH")
    table.heading("H·ªç v√† T√™n", text="H·ªç v√† T√™n")
    table.heading("SƒêT", text="SƒêT")
    table.heading("Email", text="Email")

    # CƒÉn ch·ªânh ƒë·ªô r·ªông c·ªôt
    table.column("MKH", width=50, anchor="center")
    table.column("H·ªç v√† T√™n", width=250, anchor="w")
    table.column("SƒêT", width=150, anchor="center")
    table.column("Email", width=250, anchor="w")

    # G√°n s·ª± ki·ªán ch·ªçn d√≤ng trong b·∫£ng
    table.bind("<<TreeviewSelect>>", on_select)
    
    # Th√™m d·ªØ li·ªáu m·∫´u
    for row in customers:
        table.insert("", "end", values=(row.MKH, row.HOTEN, row.SDT, row.EMAIL))

    # Th√™m thanh cu·ªôn (Scrollbar)
    scroll = ttk.Scrollbar(frame_body_customer,
                           orient="vertical", command=table.yview)
    table.configure(yscrollcommand=scroll.set)

    # Hi·ªÉn th·ªã b·∫£ng v√† thanh cu·ªôn
    table.pack(side="left", fill="both", expand=True, padx=10, pady=10)
    scroll.pack(side="right", fill="y")
